dim(training);
dim(testing);
anyNA(my_data)
summary(my_data)
training[["target"]] = factor(training[["target"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 2)
svm_linear <- train(target ~., data = training, method = "svmLinear",
trControl = trctrl,
preProcess = c("center", "scale"),
tuneLength = 10)
svm_linear
test_pred <- predict(svm_linear, newData = testing)
test_pred
length(testing$target)
length(test_pred)
confusionMatrix(table(test_pred, testing$target))
my_data <- read_excel("/Users/HP/Desktop/Book2.xlsx")
my_data <- read_excel("/Users/HP/Desktop/Book2.xlsx")
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Book2.xlsx")
str(my_data)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Book2.xlsx")
str(my_data)
normalize<- function(x){return((x-min(x))/(max(x)-min(x))
}
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Book2.xlsx")
str(my_data)
set.seed(123)
dat.d<- sample(1:nrow(my_data.n),size=nrow(my_data.n)*0.7,replace=FALSE)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Book2.xlsx")
str(my_data)
set.seed(123)
dat.d<- sample(1:nrow(my_data),size=nrow(my_data)*0.7,replace=FALSE)
train.my_data<- my_data[dat.d,1]
test.my_data<- my_data[dat.d,1]
install.packages(class)
library(class)
NROW(train.my_data_labels)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Book2.xlsx")
str(my_data)
set.seed(123)
dat.d<- sample(1:nrow(my_data),size=nrow(my_data)*0.7,replace=FALSE)
train.my_data<- my_data[dat.d,1]
test.my_data<- my_data[dat.d,1]
install.packages(class)
library(class)
NROW(train.my_data)
knn.3<- knn(train=train.my_data,test=test.my_data,c1=train.my_data,k=3)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Book2.xlsx")
str(my_data)
set.seed(123)
dat.d<- sample(1:nrow(my_data),size=nrow(my_data)*0.7,replace=FALSE)
train.my_data<- my_data[dat.d,1]
test.my_data<- my_data[dat.d,1]
install.packages("class")
library(class)
NROW(train.my_data)
knn.3<- knn(train=train.my_data,test=test.my_data,c1=train.my_data,k=3)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Book2.xlsx")
str(my_data)
set.seed(123)
dat.d<- sample(1:nrow(my_data),size=nrow(my_data)*0.7,replace=FALSE)
train.my_data<- my_data[dat.d,1]
test.my_data<- my_data[dat.d,1]
install.packages("class")
library(class)
NROW(train.my_data)
knn.3<- knn(train=train.my_data,test=test.my_data,c1=train.my_data,k=3)
install.packages("class")
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/stress_test.xlsx")
library("readxl")
stress_test <- read_excel("/Users/HP/Desktop/stress_test.xlsx")
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/stresstest.xlsx")
str(my_data)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/stresstest.xlsx")
str(my_data)
set.seed(3033)
intrain <- createDataPartition(y = my_data$target, p = 0.8, list = FALSE)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/stresstest.xlsx")
str(my_data)
set.seed(3033)
intrain <- createDataPartition(y = my_data$target, p = 0.7, list = FALSE)
dim(training);
dim(testing);
set.seed(3033)
intrain <- createDataPartition(y = my_data$target, p = 0.7, list = FALSE)
anyNA(my_data)
summary(my_data)
training[["target"]] = factor(training[["target"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
training[["target"]] = factor(training[["target"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
training[["target"]] = factor(training[["target"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
trctrl <- trainControl(method = "repeatedcv", number = 5 , repeats = 2)
install.packages('caret')
library('caret')
install.packages("readxl")
library("readxl")
install.packages("caret")
install.packages('caret')
library('caret')
install.packages("readxl")
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/stresstest.xlsx")
str(my_data)
install.packages("caret")
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/stresstest.xlsx")
str(my_data)
set.seed(2)
library(caTools)
install.packages('caTools')
library(caTools)
split <- sample.split(my_data, SplitRatio = 0.7)
split
train <- subset(my_data, , split="TRUE")
train
train <- subset(my_data, split="TRUE")
train
test <- subset(my_data, split="FALSE")
test
library('caret')
Model <- lm(f ~., data = train)
Model <- lm(score ~., data = train)
install.packages('caret')
library('caret')
install.packages('caTools')
install.packages("readxl")
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/stresstest.xlsx")
str(my_data)
# splitting data into train and test
set.seed(2)
library(caTools)
split <- sample.split(my_data, SplitRatio = 0.7)
split
train <- subset(my_data, split="TRUE")
train
test <- subset(my_data, split="FALSE")
test
# create model
Model <- lm(score ~., data = train)
summary(Model)
Model <- lm(score ~., data = train)
summary(Model)
pred <- predict(Model, test)
pred
plot(my_data)
plot(test$score, type = "l", lty = 1.8, col = "red")
plot(pred, type = "l", lty = 1.8, col = "blue")
plot(test$score, type = "l", lty = 1.8, col = "red")
lines(pred, type = "l", col = "blue")
plot(pred, type = "l", lty = 1.8, col = "blue")
plot(test$score, type = "l", lty = 1.8, col = "red")
plot(pred, type = "l", lty = 1.8, col = "blue")
plot(test$score, type = "l", lty = 1.8, col = "red")
lines(pred, type = "l", col = "blue")
plot(pred, type = "l", lty = 1.8, col = "blue")
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/stresstest.xlsx")
str(my_data)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/stresstest.xlsx")
head(my_data)
str(my_data)
normalize <- function(x) {return((x-min(x))/(max(x)-min(x)))}
my_data.n <- as.data.frame(lapply(my_data[1:9],normalize))
head(my_data.n)
set.seed(123)
dat.d<- sample(1:nrow(my_data.n),size=nrow(my_data.n)*0.7,replace=FALSE)
train.my_data <- my_data[dat.d,]
test.my_data <- my_data[dat.d,]
train.my_data_labels <- my_data[dat.d,1]
test.my_data_labels <- my_data[-dat.d,1]
library(class)
NROW(train.my_data_labels)
knn.3<- knn(train=train.my_data,test=test.my_data,cl=train.my_data,k=3)
knn.3 <- knn(train=train.my_data, test=test.my_data, cl=train.my_data, k=3)
knn.2 <- knn(train=train.my_data, test=test.my_data, cl=train.my_data, k=2)
m1 <- knn(train=train.my_data, test=test.my_data, cl=train.my_data, k=2)
m1 <- knn(train=train.my_data, test=test.my_data, cl=train.target, k=2)
my_data_train <- my_data[1:6,]
my_data_test <- my_data[7:9,]
my_data_train <- my_data[1:6,]
my_data_test <- my_data[7:9,]
my_data_train_target <- my_data[1:6,9]
my_data_test_target <- my_data[7:9,9]
m1 <- knn(train=train.my_data, test=test.my_data, cl=train.my_data_train_target, k=2)
m1 <- knn(train=train.my_data, test=test.my_data, cl=train.my_data_train_target, k=2)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=2)
m2 <- knn(train=train.my_data, test=test.my_data, cl=train.target, k=3)
m2 <- knn(train=my_data_train, test=my_data_test, cl=my_data_test_target, k=3)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=3)
dim(my_data_test_target)
dim(my_data_train_target)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=3)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=6)
length(cl)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=3)
NROW(train.my_data_labels)
my_data_train <- my_data[1:6,8]
my_data_test <- my_data[7:9,9]
dim(my_data_test_target)
dim(my_data_train_target)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=3)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=3)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=3)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=3)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=3)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=3)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=3)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=3)
m1 <- knn(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=3)
m1 <- knn3(train=my_data_train, test=my_data_test, cl=my_data_train_target, k=3)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/stresstest.xlsx")
view(my_data)
View(my_data)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/stresstest.xlsx")
View(my_data)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/stresstest.xlsx")
View(my_data)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Stress_data.xlsx")
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Stressdata.xlsx")
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Stressdata.xlsx")
View(my_data)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Stressdata.xlsx")
View(my_data)
my_data$Levels= factor(my_data$Levels,levels=c('Normal','Mild','Moderate','Severe','Extremely Severe'),labels=c(1,2,3,4,5))
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Stressdata.xlsx")
View(my_data)
my_data$Levels= factor(my_data$Levels,levels=c('Normal','Mild','Moderate','Severe','Extremely Severe'),labels=c(1,2,3,4,5))
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(my_data$Target, SplitRatio = 0.8)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Stressdata.xlsx")
View(my_data)
my_data$Levels= factor(my_data$Levels,levels=c('Normal','Mild','Moderate','Severe','Extremely Severe'),labels=c(1,2,3,4,5))
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(my_data$Target,SplitRatio = 0.8)
training_set= subset(my_data, split == TRUE)
test_set=subset(my_data, split == FALSE)
training_set[1:9] = scale(training_set[1:9])
test_set[1:9] = scale(test_set[1:9])
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Stressdata.xlsx")
View(my_data)
my_data$Levels= factor(my_data$Levels,levels=c('Normal','Mild','Moderate','Severe','Extremely Severe'),labels=c(1,2,3,4,5))
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(my_data$Target,SplitRatio = 0.8)
training_set= subset(my_data, split == TRUE)
test_set=subset(my_data, split == FALSE)
training_set[,8:9] = scale(training_set[,8:9])
test_set[,8:9] = scale(test_set[,8:9])
training_set[["Target"]] = factor(training_set[["Target"]])
training[["target"]] = factor(training[["target"]])
training_set[["Target"]] = factor(training_set[["Target"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
library(caret)
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
svm_linear <- train(target ~., data = training, method = "svmLinear",
trControl = trctrl,
preProcess = c("center", "scale"),
tuneLength = 10)
svm_linear
test_pred <- predict(svm_linear, newData = test_set)
test_pred
confusionMatrix(table(test_pred, test_set$Target))
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
svm_linear <- train(target ~., data = training_set, method = "svmLinear",
trControl = trctrl,
preProcess = c("center", "scale"),
tuneLength = 10)
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
svm_linear <- train(Target ~., data = training_set, method = "svmLinear",
trControl = trctrl,
preProcess = c("center", "scale"),
tuneLength = 10)
svm_linear
test_pred <- predict(svm_linear, newData = test_set)
test_pred
confusionMatrix(table(test_pred, test_set$Target))
test_pred <- predict(svm_linear, newData = test_set)
test_pred
my_data <- read_excel("/Users/HP/Desktop/Stressdata.xlsx")
confusionMatrix(table(test_pred, test_set))
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
svm_linear <- train(Target ~., data = training_set, method = "svmLinear",
trControl = trctrl,
preProcess = c("center", "scale"),
tuneLength = 10)
svm_linear
training_set[["Target": "Score"]] = factor(training_set[["Target": "Score"]])
training_set[[,8:9]] = factor(training_set[[,8:9]])
training_set[[8:9]] = factor(training_set[[8:9]])
training_set[["Score"]] = factor(training_set[["Score"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
svm_linear <- train(Score ~.: , data = training_set, method = "svmLinear",
training_set[["Score"]] = factor(training_set[["Score"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
svm_linear <- train(Score ~. , data = training_set, method = "svmLinear",
trControl = trctrl,
preProcess = c("center", "scale"),
tuneLength = 10)
svm_linear
test_pred <- predict(svm_linear, newData = test_set)
test_pred
confusionMatrix(table(test_pred, test_set))
confusionMatrix(table(test_pred, test_set$Score))
test_pred
svm_linear
summary(svm_linear)
summary(svm_linear)
svm_linear <- train(Score ~. , data = training_set, method = "svmLinear",
preProcess = c("center", "scale"),
tuneLength = 10)
svm_linear <- train(Score ~. , data = training_set, method = "svmLinear",
type = 'C-classification',
kernel='linear',
Scale=FALSE)
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
svm_linear <- train(Score ~. , data = training_set, method = "svmLinear",
trControl = trctrl,
preProcess = c("center", "scale"),
tuneLength = 10)
svm_linear
summary(svm_linear)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Stressdata.xlsx")
View(my_data)
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(my_data$Target,SplitRatio = 0.8)
library(caTools)
set.seed(123)
split = sample.split(my_data$Level,SplitRatio = 0.8)
library(caTools)
set.seed(123)
split = sample.split(my_data$Levels,SplitRatio = 0.8)
training_set= subset(my_data, split == TRUE)
test_set=subset(my_data, split == FALSE)
training_set[,8:9] = scale(training_set[,8:9])
test_set[,8:9] = scale(test_set[,8:9])
training_set[["Levels"]] = factor(training_set[["Levels"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
library(caret)
library(caTools)
set.seed(123)
split = sample.split(my_data$Levels,SplitRatio = 0.8)
training_set= subset(my_data, split == TRUE)
test_set=subset(my_data, split == FALSE)
training_set[,8:9] = scale(training_set[,8:9])
test_set[,8:9] = scale(test_set[,8:9])
training_set[["Levels"]] = factor(training_set[["Levels"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
svm_linear <- train(Levels ~. , data = training_set, method = "svmLinear",
trControl = trctrl,
preProcess = c("center", "scale"),
tuneLength = 10)
svm_linear
summary(svm_linear)
test_pred <- predict(svm_linear, newData = test_set)
library(caTools)
set.seed(123)
split = sample.split(my_data$Levels,SplitRatio = 0.8)
training_set= subset(my_data, split == TRUE)
test_set=subset(my_data, split == FALSE)
training_set[,8:9] = scale(training_set[,8:9])
test_set[,8:9] = scale(test_set[,8:9])
training_set[["Levels"]] = factor(training_set[["Levels"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
svm_linear <- train(Levels ~. , data = training_set, method = "svmLinear",
trControl = trctrl,
preProcess = c("center", "scale"),
tuneLength = 10)
svm_linear
summary(svm_linear)
test_pred <- predict(svm_linear, newData = test_set)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Stressdata.xlsx")
View(my_data)
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(my_data$Levels,SplitRatio = 0.8)
training_set= subset(my_data, split == TRUE)
test_set=subset(my_data, split == FALSE)
training_set[,8:9] = scale(training_set[,8:9])
test_set[,8:9] = scale(test_set[,8:9])
training_set[["Levels"]] = factor(training_set[["Levels"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
svm_linear <- train(Levels ~. , data = training_set, method = "svmLinear",
trControl = trctrl,
preProcess = c("center", "scale"),
tuneLength = 10)
svm_linear
summary(svm_linear)
test_pred <- predict(svm_linear, newData = test_set)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Stressdata.xlsx")
View(my_data)
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(my_data$Levels,SplitRatio = 0.8)
training_set= subset(my_data, split == TRUE)
test_set=subset(my_data, split == FALSE)
training_set[,8:9] = scale(training_set[,8:9])
test_set[,8:9] = scale(test_set[,8:9])
training_set[["Levels"]] = factor(training_set[["Levels"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
svm_linear <- train(Levels ~. , data = training_set, method = "svmLinear",
trControl = trctrl,
preProcess = c("center", "scale"),
tuneLength = 10)
svm_linear
summary(svm_linear)
test_pred <- predict(svm_linear, newData = test_set)
test_pred
confusionMatrix(table(test_pred, test_set$Levels))
test_pred <- predict(svm_linear, newData = test_set)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
test_pred <- predict(svm_linear, newData = test_set$Levels)
test_pred <- predict(svm_linear, test_set$Levels)
test_pred
confusionMatrix(table(test_pred, test_set$Levels))
test_pred <- predict(svm_linear, test_set$Levels)
test_pred <- predict(svm_linear, test_set$Levels)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Stressdata.xlsx")
View(my_data)
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(my_data$Levels,SplitRatio = 0.8)
training_set= subset(my_data, split == TRUE)
test_set=subset(my_data, split == FALSE)
training_set[,8:9] = scale(training_set[,8:9])
test_set[,8:9] = scale(test_set[,8:9])
training_set[["Levels"]] = factor(training_set[["Levels"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
training_set[["Levels"]] = factor(training_set[["Levels"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
training_set[["Levels"]] = factor(training_set[["Levels"]])
trctrl <- trainControl(method = "repeatedcv", number = 10 , repeats = 3)
svm_linear <- train(Levels ~. , data = training_set, method = "svmLinear",
trControl = trctrl,
preProcess = c("center", "scale"),
tuneLength = 10)
svm_linear
summary(svm_linear)
test_pred <- predict(svm_linear, test_set$Levels)
test_pred
confusionMatrix(table(test_pred, test_set$Levels))
confusionMatrix(table(test_pred, test_set$Levels))
training_set[["Scores"]] = factor(training_set[["Scores"]])
training_set[["Levels"]] = factor(training_set[["Levels"]])
test_pred <- predict(svm_linear, test_set$Levels)
library("readxl")
my_data <- read_excel("/Users/HP/Desktop/Stressdata.xlsx")
View(my_data)
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(my_data$Levels,SplitRatio = 0.8)
training_set= subset(my_data, split == TRUE)
test_set=subset(my_data, split == FALSE)
training_set[,8:9] = scale(training_set[,8:9])
test_set[,8:9] = scale(test_set[,8:9])
str(my_data)
library(e1071)
ir=my_data
train=ir[1:7,]
test=ir[8:10,]
model=naiveBayes(score~.,data=train)
train=ir[1:7,8:9]
test=ir[8:10,8:9]
model=naiveBayes(score~.,data=train)
model=naiveBayes(levels~.,data=train)
